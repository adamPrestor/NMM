print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 25, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 30, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 15, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 20, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 30, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 35, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 35, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 40, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 45, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(10, 50, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# load values
n_ds <- seq(55, 100, by=5)
print(n_ds)
df <- data.frame()
for (n_d in n_ds) {
df_file <- sprintf("stability/model_%d.csv", n_d)
df_model <- data.frame(fread(df_file, sep = ",", header = FALSE))
names(df_model) <- c("weight")
df_model$type <- sprintf("Steps=%d", n_d)
df_model$index <- seq(2000)
df <- rbind(df, df_model)
}
n <- length(n_ds)
palette <- rainbow(n, s = 1, v = 1, start = 0, end = max(1, n - 1)/n, alpha = 1)
ggplot(df, aes(x = index, y = weight, colour = type)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(x = "Time", y = "Connection weight") +
  scale_colour_manual(values = palette) +
  theme(legend.title = element_blank(), text = element_text(size = 18)) +
  ylim(0, 1)
#
# Plots a grid of matrices
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
library(cowplot)
library(plyr)
library(data.table)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# metric plots
df <- data.frame(fread("sdp/M_sdp_model.csv", sep = ",", header = FALSE))
names(df) <- c("iteration", "a_sdp", "l", "c", "q", "r", "deg")
# summarize data
df_mean <- ddply(df, ~ a_sdp , summarize,
                 l_mean = mean(l, na.rm = TRUE), l_low  = quantile(l, 0.025, na.rm = TRUE), l_hi = quantile(l, 0.975, na.rm = TRUE),
                 c_mean = mean(c, na.rm = TRUE), c_low  = quantile(c, 0.025, na.rm = TRUE), c_hi = quantile(c, 0.975, na.rm = TRUE),
                 q_mean = mean(q, na.rm = TRUE), q_low  = quantile(q, 0.025, na.rm = TRUE), q_hi = quantile(q, 0.975, na.rm = TRUE),
                 r_mean = mean(r, na.rm = TRUE), r_low  = quantile(r, 0.025, na.rm = TRUE), r_hi = quantile(r, 0.975, na.rm = TRUE))
#plot
p1 <- ggplot(df_mean, aes(x = a_sdp, y = l_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = l_low, ymax = l_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Characteristic path") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 5)
p2 <- ggplot(df_mean, aes(x = a_sdp, y = c_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = c_low, ymax = c_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Clustering coefficient") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 1)
p3 <- ggplot(df_mean, aes(x = a_sdp, y = q_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = q_low, ymax = q_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Weighted modularity") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 1)
p4 <- ggplot(df_mean, aes(x = a_sdp, y = r_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = r_low, ymax = r_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Assortativity coefficient") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(-1, 1)
plot_grid(p1, p2, p3, p4, ncol = 4, nrow = 1, scale = 0.9)
install.packages("plyr")
#
# Plots a grid of matrices
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
library(cowplot)
library(plyr)
library(data.table)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# metric plots
df <- data.frame(fread("sdp/M_sdp_model.csv", sep = ",", header = FALSE))
names(df) <- c("iteration", "a_sdp", "l", "c", "q", "r", "deg")
# summarize data
df_mean <- ddply(df, ~ a_sdp , summarize,
                 l_mean = mean(l, na.rm = TRUE), l_low  = quantile(l, 0.025, na.rm = TRUE), l_hi = quantile(l, 0.975, na.rm = TRUE),
                 c_mean = mean(c, na.rm = TRUE), c_low  = quantile(c, 0.025, na.rm = TRUE), c_hi = quantile(c, 0.975, na.rm = TRUE),
                 q_mean = mean(q, na.rm = TRUE), q_low  = quantile(q, 0.025, na.rm = TRUE), q_hi = quantile(q, 0.975, na.rm = TRUE),
                 r_mean = mean(r, na.rm = TRUE), r_low  = quantile(r, 0.025, na.rm = TRUE), r_hi = quantile(r, 0.975, na.rm = TRUE))
#plot
p1 <- ggplot(df_mean, aes(x = a_sdp, y = l_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = l_low, ymax = l_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Characteristic path") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 5)
p2 <- ggplot(df_mean, aes(x = a_sdp, y = c_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = c_low, ymax = c_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Clustering coefficient") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 1)
p3 <- ggplot(df_mean, aes(x = a_sdp, y = q_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = q_low, ymax = q_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Weighted modularity") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 1)
p4 <- ggplot(df_mean, aes(x = a_sdp, y = r_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = r_low, ymax = r_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Assortativity coefficient") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(-1, 1)
plot_grid(p1, p2, p3, p4, ncol = 4, nrow = 1, scale = 0.9)
#
# Plots a grid of matrices
# clear workspace
rm(list = ls())
# load libraries
library(ggplot2)
library(cowplot)
library(plyr)
library(data.table)
# working directory
setwd("D:/Mag/SourceCode/NMM/R/Results")
# metric plots
df <- data.frame(fread("sdp/M_sdp_model.csv", sep = ",", header = FALSE))
names(df) <- c("iteration", "a_sdp", "l", "c", "q", "r", "deg")
# summarize data
df_mean <- ddply(df, ~ a_sdp , summarize,
                 l_mean = mean(l, na.rm = TRUE), l_low  = quantile(l, 0.025, na.rm = TRUE), l_hi = quantile(l, 0.975, na.rm = TRUE),
                 c_mean = mean(c, na.rm = TRUE), c_low  = quantile(c, 0.025, na.rm = TRUE), c_hi = quantile(c, 0.975, na.rm = TRUE),
                 q_mean = mean(q, na.rm = TRUE), q_low  = quantile(q, 0.025, na.rm = TRUE), q_hi = quantile(q, 0.975, na.rm = TRUE),
                 r_mean = mean(r, na.rm = TRUE), r_low  = quantile(r, 0.025, na.rm = TRUE), r_hi = quantile(r, 0.975, na.rm = TRUE))
#plot
p1 <- ggplot(df_mean, aes(x = a_sdp, y = l_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = l_low, ymax = l_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Characteristic path") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 5)
p2 <- ggplot(df_mean, aes(x = a_sdp, y = c_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = c_low, ymax = c_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Clustering coefficient") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 1)
p3 <- ggplot(df_mean, aes(x = a_sdp, y = q_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = q_low, ymax = q_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Weighted modularity") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(0, 1)
p4 <- ggplot(df_mean, aes(x = a_sdp, y = r_mean)) +
  geom_line(size = 1, colour = "#beaed4") +
  geom_ribbon(aes(ymin = r_low, ymax = r_hi), fill = "#beaed4", alpha = "0.3") +
  theme_minimal() +
  theme(legend.position = "none", text = element_text(size = 18)) +
  labs(x = expression(a[sdp]), y = "Assortativity coefficient") +
  scale_x_continuous(breaks = c(0, 0.0001, 0.0002),
                     labels = function(x) format(x, scientific = FALSE)) +
  ylim(-1, 1)
plot_grid(p1, p2, p3, p4, ncol = 4, nrow = 1, scale = 0.9)
library(ggplot2)
a_sdp <- 0.0001
b_sdp <- 2
h_sdp <- 1^b_sdp
df <- NULL
for (b_sdp in seq(0.5, 8, 0.5)) {
  for (c in seq(-1, 1, 0.01)) {
    r <- (c + 1)^b_sdp
    w <- a_sdp * ((r / (r + h_sdp)) - 0.5)
    df <- rbind(df, data.frame(c=c, w=w, b_sdp=paste0("b_sdp = ", b_sdp)))
  }
}
ggplot(data = df, aes(x = c, y = w)) +
  geom_line(size = 1, colour = "#beaed4") +
  theme_minimal() +
  labs(x = "Correlation", y = "Weight change") +
  facet_wrap(~ b_sdp, ncol = 4) +
  scale_y_continuous(limits = c(-0.00005, 0.00005),
                     breaks = c(-0.00005, 0, 0.00005),
                     labels = function(x) format(x, scientific = FALSE))
q()
